#!/bin/bash

# check_for checks if the given regex is present in the staged files
function check_for {
    if [ $? -ne 0 ]; then
        exit 1
    fi

    # the error message is the last argument
    ERROR_MESSAGE=${@: -1}

    # CONDITION is an or of all arguments except the last one, in lines that
    # starts with + (added lines)
    # concatenate all arguments except the last one with | in between
    CONDITION=$(echo "${@:1:$(($#-1))}" | sed 's/ /\\|/g')

    if [ "$(git diff --staged -U0 | grep -c "$CONDITION")" -gt 0 ]; then
        echo "You have $ERROR_MESSAGE in your commit"
        exit 1
    fi
}

check_for "F\(It\|Describe\|Context\)" "focus tests"
check_for "X\(It\|Describe\|Context\)" "excluded tests"
check_for "//\s*TODO:" "TODOs"
check_for "Print\(ln\|f\)\?" "print statements"

# check inside go.mod for "replace url => path" entries
if [ $(git diff --staged go.mod | grep -c "replace") -gt 0 ]; then
    echo "You have replace entries in your go.mod"
    exit 1
fi

# speed up nilaway by only checking files that have been changed
for arg in "$@"; do
    if [ "$arg" == "--fast" ]; then
        FAST_MODE=1
    fi
done

# Get full path to the directory containing this script
SCRIPT_DIR=$(dirname $(readlink -f $0))

LINTER_CONFIG=$SCRIPT_DIR/../assets/golangci.yaml
GOLANGCI_LINT="golangci-lint run -c $LINTER_CONFIG --fix --new-from-rev HEAD"

echo -n "Running golangci-lint... "
$GOLANGCI_LINT
if [ $? -ne 0 ]; then
    echo "FAIL"
    exit 1
fi
echo "OK"

# Get all go files changed since last commit, ignoring deleted files and files
# inside "generated" directory
STAGED_GO_FILES=$(git diff --staged --name-only --diff-filter=ACM | grep -E "\.go$" | grep -v "generated")
echo "$STAGED_GO_FILES"

NILAWAY_FILES=$(echo $STAGED_GO_FILES | sed 's/ /,/g')

NILAWAY_SPEDUP_ARGS=(
    -include-pkgs="github.com/getalternative/"
    -exclude-pkgs="github.com/getalternative/${PWD##*/}/internal/generated,github.com/getalternative/${PWD##*/}/tests/mocks"
)

NILAWAY_CMD=(
    nilaway
    -include-errors-in-files="$NILAWAY_FILES"
)

# if the -fast flag is passed, add the sped up args to nilaway
if [ $FAST_MODE ]; then
    NILAWAY_CMD+=("${NILAWAY_SPEDUP_ARGS[@]}")
fi

echo -n "Checking nilaway... "
"${NILAWAY_CMD[@]}" ./...

if [ $? -ne 0 ]; then
    echo "FAIL"
    exit 1
fi
echo "OK"

# Run local pre-commit hook after this if this is not a symlink
if [ ! -L $0 ]; then
    $SCRIPT_DIR/scripts/run-local-hook.sh $(basename $0)
fi
